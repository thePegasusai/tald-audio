apiVersion: apps/v1
kind: Deployment
metadata:
  name: tald-web
  namespace: tald-unia
  labels:
    app: tald-web
    component: frontend
    version: 1.0.0
    part-of: tald-unia
    managed-by: kubernetes
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
    prometheus.io/path: "/metrics"
    checksum/config: ${CONFIG_CHECKSUM}
    kubernetes.io/change-cause: "Initial deployment of TALD UNIA web interface"

spec:
  replicas: 3
  selector:
    matchLabels:
      app: tald-web
      component: frontend
  
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0

  template:
    metadata:
      labels:
        app: tald-web
        component: frontend
        version: 1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"

    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 101
        runAsGroup: 101
        fsGroup: 101
        seccompProfile:
          type: RuntimeDefault

      containers:
      - name: tald-web
        image: nginx:1.25-alpine
        imagePullPolicy: IfNotPresent
        
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        - containerPort: 8080
          name: metrics
          protocol: TCP

        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi

        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL

        livenessProbe:
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 15
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3

        readinessProbe:
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3

        startupProbe:
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 2
          successThreshold: 1
          failureThreshold: 30

        envFrom:
        - configMapRef:
            name: tald-web-env

        volumeMounts:
        - name: web-content
          mountPath: /usr/share/nginx/html
          readOnly: true
        - name: nginx-config
          mountPath: /etc/nginx/conf.d
          readOnly: true
        - name: tmp
          mountPath: /tmp

      volumes:
      - name: web-content
        emptyDir:
          medium: Memory
          sizeLimit: 100Mi
      - name: nginx-config
        configMap:
          name: tald-web-nginx-config
          defaultMode: 420
      - name: tmp
        emptyDir:
          medium: Memory
          sizeLimit: 50Mi

      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - tald-web
              topologyKey: kubernetes.io/hostname

      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      restartPolicy: Always