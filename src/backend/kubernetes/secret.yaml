apiVersion: v1
kind: Secret
metadata:
  name: tald-backend-secrets
  namespace: tald-unia
  labels:
    app: tald-backend
    component: secrets
    security-tier: high
    rotation-enabled: "true"
  annotations:
    vault.hashicorp.com/agent-inject: "true"
    vault.hashicorp.com/role: "tald-backend"
    encryption.tald.io/type: "aes-256-gcm"
    rotation.tald.io/schedule: "30d"
    audit.tald.io/enabled: "true"
type: Opaque
data:
  # Database credentials - rotated every 30 days
  DB_USERNAME: "{{ base64_encode(vault_secret('database/creds/tald-backend').username) }}"
  DB_PASSWORD: "{{ base64_encode(vault_secret('database/creds/tald-backend').password) }}"
  
  # JWT signing key - HSM protected, rotated every 30 days
  JWT_SECRET: "{{ base64_encode(vault_secret('jwt/keys/signing').key) }}"
  
  # Redis cache access - rotated every 30 days
  REDIS_PASSWORD: "{{ base64_encode(vault_secret('redis/creds/tald-backend').password) }}"
  
  # AI model access credentials - usage tracked, rotated every 30 days
  AI_MODEL_KEY: "{{ base64_encode(vault_secret('ai/creds/model-access').key) }}"
  
  # Backend API access - rate limited, rotated every 30 days
  API_KEY: "{{ base64_encode(vault_secret('api/keys/backend').key) }}"
  
  # Master encryption key - HSM protected, rotated every 30 days
  ENCRYPTION_KEY: "{{ base64_encode(vault_secret('encryption/keys/master').key) }}"

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: tald-backend-secrets-access
  namespace: tald-unia
subjects:
- kind: ServiceAccount
  name: tald-backend-sa
  namespace: tald-unia
roleRef:
  kind: Role
  name: tald-backend
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: tald-backend
  namespace: tald-unia
rules:
- apiGroups: [""]
  resources: ["secrets"]
  resourceNames: ["tald-backend-secrets"]
  verbs: ["get"]