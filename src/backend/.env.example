# Environment variables for TALD UNIA Audio System Backend
# Copy this file to .env and update values according to your environment
# DO NOT commit actual .env files containing production values to version control

#-----------------------------------------------
# Server Configuration
#-----------------------------------------------
# Runtime environment (development/production/test)
NODE_ENV=development

# Server port (1024-65535)
PORT=3000

#-----------------------------------------------
# Database Configuration
#-----------------------------------------------
# PostgreSQL connection settings
DB_HOST=localhost
DB_PORT=5432
DB_USERNAME=postgres
DB_PASSWORD=
DB_NAME=tald_unia

#-----------------------------------------------
# Redis Configuration
#-----------------------------------------------
# Redis cache server settings
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=

#-----------------------------------------------
# JWT Configuration
#-----------------------------------------------
# JSON Web Token settings
# Generate a secure random string for JWT_SECRET in production
JWT_SECRET=
JWT_EXPIRATION=24h

#-----------------------------------------------
# Audio Processing Configuration
#-----------------------------------------------
# Core audio processing parameters
AUDIO_SAMPLE_RATE=48000
AUDIO_BIT_DEPTH=24
AUDIO_BUFFER_SIZE=1024
AUDIO_CHANNELS=2

#-----------------------------------------------
# AI Configuration
#-----------------------------------------------
# AI model and inference settings
AI_MODEL_PATH=./models
AI_INFERENCE_THREADS=4
AI_MODEL_VERSION=latest

#-----------------------------------------------
# Security Notes
#-----------------------------------------------
# 1. Use a minimum of 12 characters for DB_PASSWORD with mixed case, numbers, and symbols
# 2. Use a minimum of 16 characters for REDIS_PASSWORD in production
# 3. JWT_SECRET should be at least 64 characters with high entropy
# 4. Use separate credentials for development, staging, and production
# 5. Enable encryption at rest for all sensitive values in production
# 6. Implement regular secret rotation policies
# 7. Use hardware security modules (HSM) for critical secrets in production